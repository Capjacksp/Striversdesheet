string longestPalinSubstring(string str)
{
    int n = str.size();
    if(n<2)return str;
    //// Alog ---> It is based on finding from center ... we keep track of element from center in both side 1... l=i-1 AND h=i+1 ...
    
    int maxs = 1;
    int s=0;
    int l,h;
    for(int i =0;i<n;i++){
        l=i-1;
        h=i+1;
        while(h<n && str[h]==str[i]){h++;}
        while(l>=0 && str[l]==str[i]){l--;}
        while(l>=0 && h<n && str[h]==str[l]){
            l--;
            h++;
        }
        int ln = h-l-1;
        if(maxs<ln){
            maxs=ln;
            s=l+1;
        }
    }
    return str.substr(s,maxs);
}
