#include<bits/stdc++.h>
bool method_1(string &s1, string &s2){
    sort(s1.begin(),s1.end());
    sort(s2.begin(),s2.end());
    if(s1==s2)return true;
    return false;
}

bool method_2(string &s1,string &s2){
    int n = s1.size();
    int m = s2.size();
    if(n!=m)return false;
    unordered_map<char,int>mp;
    for(int i=0;i<n;i++){
        mp[s1[i]]++;
    }
    for(auto x:s2){
        if(mp.find(x)!=mp.end()){
            mp[x]--;
        }
        else return false;
    }
    return true;
    
}

void swap(char *a,char *b){
    char temp = *a;
    *a=*b;
    *b=temp;
}


bool method_3(int i,int n, string &s1, string &s2){
    if(i==n){
        if(s1==s2)return true;
        return false;
    }
    for(int k=i;k<n;k++){
        swap(&s1[i],&s1[k]);
        method_3(i+1,n,s1,s2);
        swap(&s1[i],&s1[k]);
    }
    return false;
    
}




bool areAnagram(string &str1, string &str2){
    int n =str1.size();
    int m = str2.size();
    if(n!=m)return false;
//     return method_1(str1,str2);
    return method_2(str1,str2);
//     return method_3(0,n,str1,str2);
}
