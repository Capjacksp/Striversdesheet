/************************************************************

    Following is the Tree node structure
	
	template <typename T>
    class TreeNode 
    {
        public : 
        T val;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T val) 
        {
            this -> val = val;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/
bool isleaf(TreeNode<int>*root){
    return (root->left==NULL && root->right==NULL);
}

int  solve(TreeNode<int>* root , long long int &ans){
    if(root==NULL)return 0;
    if(isleaf(root))return root->val;
    int l = solve(root->left,ans);
    int h = solve(root->right,ans);
    if(!isleaf(root)){
        ans<l+h+root->val?ans=l+h+root->val:ans;
        return max(l,h)+root->val;
    }
    return (!root->left)?h+root->val:l+root->val;
    
}

long long int findMaxSumPath(TreeNode<int> *root){
    if(!root)return -1;
    if((root->left==NULL && root->right!=NULL) || (root->left!=NULL && root->right==NULL) || isleaf(root)){
        return -1;
    }
    long long int ans=-1;
    long long int x=-1;
    solve(root,ans);
    return max(x,ans);
}







