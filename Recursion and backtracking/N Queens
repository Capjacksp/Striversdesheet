
bool to_put(int r , int c,int n,vector<vector<int>>&x){
    int baserow=r;
    int basecol=c;
    while(r>=0&&c>=0){
        if(x[r][c]==1)return false;
        r--;
        c--;
    }
    r=baserow;
    c=basecol;
    while(r<n && c>=0){
        if(x[r][c]==1)return false;
        r++;
        c--;
    }
    r=baserow;
    c=basecol;
    while(c>=0){
        if(x[r][c]==1)return false;
        c--;
    }
    return true;
}


void solve(int i,int n,vector<vector<int>>&x,vector<vector<int>>&v){
    if(i==n){
        vector<int>temp;
        for(int k=0;k<x.size();k++){
            for(int t=0;t<x[k].size();t++){
                temp.push_back(x[k][t]);
            }
        }
        v.push_back(temp);
        temp.clear();
        return;
    }
    
    for(int j =0;j<n;j++){
        if(to_put(j,i,n,x)){
            x[j][i]=1;
            solve(i+1,n,x,v);
            x[j][i]=0;
        }
    }
    
}


vector<vector<int>> solveNQueens(int n) {
    vector<vector<int>>v;
    vector<vector<int>>x(n,vector<int>(n,0));
    solve(0,n,x,v);
    return v;
}
