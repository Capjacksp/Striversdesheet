#include <bits/stdc++.h> 

long long int merge(long long *arr ,long long int temp[], int l,int m , int r){
    long long int x =0;
    int i=l,j=m,k=l;
    while((i<=m-1) && (j<=r)){
        if(arr[i]<=arr[j])temp[k++]=arr[i++];
        else{
            temp[k++]=arr[j++];
            x=x+(m-i);
        }
    }
    while(i<=m-1)temp[k++]=arr[i++];
    while(j<=r)temp[k++]=arr[j++];
    for(int t =l;t<=r;t++){
        arr[t]=temp[t];
    }
    return x;
}


long long int merge_sort(long long *arr,long long int temp[] ,int l,int r){
    int m;
    long long int ans=0;
    if(r>l){
        m = (r+l)/2;
        ans+= merge_sort(arr,temp,l,m);
        ans+= merge_sort(arr,temp,m+1,r);
        ans+= merge(arr,temp,l,m+1,r);
    }
    return ans;
}


long long getInversions(long long *arr, int n){
    long long int temp [n];
    return merge_sort(arr,temp,0,n-1);
}
