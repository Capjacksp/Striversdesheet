int floydWarshall(int n, int m, int src, int dest, vector<vector<int>> &edges) {
    int arr[n][n];
    memset(arr,-1,sizeof(arr));
    for(int i=0;i<m;i++){
        arr[edges[i][0]-1][edges[i][1]-1] = edges[i][2];
    }
    for(int i=0;i<n;i++){
        arr[i][i]=0;
    }
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            if(arr[i][j]==-1)arr[i][j]=INT_MAX;
        }
    }

    
    for(int k=0;k<n;k++){
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                if((arr[i][j] > arr[i][k]+arr[k][j]) && arr[i][k]!=INT_MAX && arr[k][j]!=INT_MAX){ arr[i][j] =arr[i][k]+arr[k][j]; }
            }
        }
    }
    
    if(arr[src-1][dest-1]>=INT_MAX)return 1e9;
    return arr[src-1][dest-1];
    
}








