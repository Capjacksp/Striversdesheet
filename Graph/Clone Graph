/***************************************************************************

	Class for graph node is as follows:

	class graphNode
	{
		public:
    		int data;
    	vector<graphNode *> neighbours;
    	graphNode()
    	{
        	data = 0;
        	neighbours = vector<graphNode *>();
    	}

    	graphNode(int val)
    	{
        	data = val;
        	neighbours = vector<graphNode *>();
    	}

    	graphNode(int val, vector<graphNode *> neighbours)
    	{
        	data = val;
        	this->neighbours = neighbours;
    	}
	};

******************************************************************************/
#include<bits/stdc++.h>
unordered_map<graphNode*, graphNode*>mp;

void dfs(graphNode* node){
    graphNode * clone = new graphNode(node->data);
    mp[node]=clone;
    for(auto it:node->neighbours){
        if(mp.find(it)!=mp.end())clone->neighbours.push_back(mp[it]);
        else{
            dfs(it);
            clone->neighbours.push_back(mp[it]);
        }
    }
}




graphNode *cloneGraph(graphNode *node){
    if(node==NULL)return NULL;
    dfs(node);
    return mp[node];
}









